// Generated by CoffeeScript 1.12.7
(function() {
  var $, 
    Guest, 
    Host,
    extend = function(child, parent) {
      for (var key in parent) {
        if (hasProp.call(parent, key)) child[key] = parent[key];
      }
      function ctor() {
        this.constructor = child;
      }
      ctor.prototype = parent.prototype;
      child.prototype = new ctor();
      child.__super__ = parent.prototype;
      return child;
    },
    hasProp = {}.hasOwnProperty,
    indexOf = [].indexOf || function(item) {
      for (var i = 0, l = this.length; i < l; i++) {
        if (i in this && this[i] === item)
          return i;
      } return -1;
    };

  $ = require('jquery');

  Guest = require('./guest');

  module.exports = Host = (function(superClass) {
    extend(Host, superClass);

    function Host(element, config) {
      var app, 
        configParam, 
        ref, 
        service, 
        sidebarAppSrc;
      if ((ref = config.services) != null ? ref[0] : void 0) {
        service = config.services[0];
        if (service.onLoginRequest) {
          service.onLoginRequestProvided = true;
        }
        if (service.onLogoutRequest) {
          service.onLogoutRequestProvided = true;
        }
        if (service.onSignupRequest) {
          service.onSignupRequestProvided = true;
        }
        if (service.onProfileRequest) {
          service.onProfileRequestProvided = true;
        }
        if (service.onHelpRequest) {
          service.onHelpRequestProvided = true;
        }
      }
      configParam = 'config=' + encodeURIComponent(JSON.stringify(Object.assign({}, config, {
        sidebarAppUrl: void 0,
        pluginClasses: void 0,
      })));
      if (config.sidebarAppUrl && indexOf.call(config.sidebarAppUrl, '?') >= 0) {
        sidebarAppSrc = config.sidebarAppUrl + '&' + configParam;
      } else {
        sidebarAppSrc = config.sidebarAppUrl + '?' + configParam;
      }
      app = $('<iframe></iframe>').attr('name', 'hyp_sidebar_frame').attr('allowfullscreen', '').attr('seamless', '').attr('src', sidebarAppSrc).addClass('h-sidebar-iframe');
      this.frame = $('<div></div>').css('display', 'none').addClass('annotator-frame annotator-outer');
      if (config.theme === 'clean') {
        this.frame.addClass('annotator-frame--drop-shadow-enabled');
      }
      this.frame.appendTo(element);
      Host.__super__.constructor.apply(this, arguments);
      app.appendTo(this.frame);
      this.on('panelReady', (function(_this) {
        return function() {
          return _this.frame.css('display', '');
        };
      })(this));
      this.on('beforeAnnotationCreated', function(annotation) {
        if (!annotation.$highlight) {
          return app[0].contentWindow.focus();
        }
      });
    }

    Host.prototype.destroy = function() {
      this.frame.remove();
      return Host.__super__.destroy.apply(this, arguments);
    };

    return Host;

  })(Guest);

}).call(this);
